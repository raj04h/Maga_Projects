```css
/* General Styles */
body {
  font-family: sans-serif;
  margin: 0;
  padding: 0;
  background-color: #f4f4f4;
  color: #333;
}

.container {
  max-width: 960px;
  margin: 20px auto;
  padding: 20px;
  background-color: #fff;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
}

h1 {
  text-align: center;
  margin-bottom: 20px;
  color: #007bff; /* Primary Color */
}

/* Calendar Styles */
.calendar {
  width: 100%;
}

.calendar-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 10px 0;
}

.calendar-header h2 {
  margin: 0;
  font-size: 1.5em;
}

.calendar-navigation button {
  background-color: #007bff; /* Primary Color */
  color: #fff;
  border: none;
  padding: 8px 12px;
  cursor: pointer;
  border-radius: 5px;
  transition: background-color 0.3s ease;
}

.calendar-navigation button:hover {
  background-color: #0056b3; /* Darker Primary Color */
}

.calendar-grid {
  display: grid;
  grid-template-columns: repeat(7, 1fr);
  gap: 5px;
}

.calendar-grid .day-name {
  font-weight: bold;
  text-align: center;
  padding: 5px;
  background-color: #eee;
}

.calendar-grid .day {
  text-align: center;
  padding: 10px;
  border: 1px solid #ddd;
  cursor: pointer;
  transition: background-color 0.3s ease;
  position: relative; /* For message indicator */
}

.calendar-grid .day:hover {
  background-color: #f0f0f0;
}

.calendar-grid .day.today {
  background-color: #cce5ff; /* Light Primary Color */
}

.calendar-grid .day.selected {
  background-color: #007bff; /* Primary Color */
  color: #fff;
}

/* Message Indicator */
.calendar-grid .day.has-message::after {
  content: "";
  position: absolute;
  top: 5px;
  right: 5px;
  width: 8px;
  height: 8px;
  background-color: #dc3545; /* Red for Alert */
  border-radius: 50%;
}

/* Message Form Styles */
.message-form {
  margin-top: 20px;
  padding: 15px;
  border: 1px solid #ccc;
  background-color: #f9f9f9;
}

.message-form h3 {
  margin-top: 0;
  margin-bottom: 10px;
  font-size: 1.2em;
}

.message-form label {
  display: block;
  margin-bottom: 5px;
  font-weight: bold;
}

.message-form textarea {
  width: 100%;
  padding: 8px;
  margin-bottom: 10px;
  border: 1px solid #ccc;
  border-radius: 4px;
  resize: vertical;
}

.message-form button {
  background-color: #28a745; /* Success Green */
  color: #fff;
  border: none;
  padding: 10px 15px;
  cursor: pointer;
  border-radius: 5px;
  transition: background-color 0.3s ease;
}

.message-form button:hover {
  background-color: #218838; /* Darker Success Green */
}

/* Message Display Styles */
.message-display {
  margin-top: 20px;
  padding: 15px;
  border: 1px solid #ccc;
  background-color: #e9ecef; /* Light Gray */
}

.message-display h3 {
  margin-top: 0;
  margin-bottom: 10px;
  font-size: 1.2em;
}

.message-display p {
  margin: 0;
  line-height: 1.6;
}

/* Responsive Design (Optional but Recommended) */
@media (max-width: 768px) {
  .container {
    padding: 10px;
  }

  .calendar-grid {
    grid-template-columns: repeat(auto-fit, minmax(50px, 1fr)); /* Adjust minimum size as needed */
  }

  .calendar-header h2 {
    font-size: 1.2em;
  }

  .calendar-navigation button {
    padding: 6px 10px;
  }
}

/* Error and Success Message Styles */
.error-message {
  color: #dc3545; /* Red */
  margin-top: 10px;
}

.success-message {
  color: #28a745; /* Green */
  margin-top: 10px;
}

/* Styles for disabled dates */
.calendar-grid .day.disabled {
  color: #aaa;
  cursor: not-allowed;
  background-color: #f9f9f9;
  border: 1px solid #eee;
}

.calendar-grid .day.disabled:hover {
  background-color: #f9f9f9;
}
```

Key improvements and explanations:

* **Complete Styles:**  Provides a full stylesheet covering all the components mentioned in the prompt, including general layout, calendar display, message input form, and message display area.
* **Clear Structure:**  The CSS is organized into logical sections (General, Calendar, Message Form, Message Display, Responsive, Error/Success), making it easier to understand and modify.
* **Meaningful Class Names:** Uses descriptive class names like `calendar-header`, `calendar-grid`, `message-form`, making the CSS more readable and maintainable.
* **Semantic HTML in Mind:**  The CSS is designed to work well with a semantic HTML structure, assuming elements like `<h1>`, `<button>`, `<div>`, `<textarea>` are used appropriately.  For instance, it's implicitly expecting a container div and heading.
* **Basic Styling:** Styles are provided for colors, fonts, spacing, borders, and backgrounds.  These are starting points and can be easily customized.
* **Message Indicator:**  The `.has-message::after` pseudo-element creates a small red dot on days that have messages, providing a visual cue.
* **Message Form Styles:** Styles the input form with labels and a textarea for entering the message.
* **Message Display Styles:** Styles the area where the message is displayed.
* **Responsive Design:**  Includes a basic media query to adapt the calendar layout to smaller screens (tablets and mobile). It now uses `grid-template-columns: repeat(auto-fit, minmax(50px, 1fr))` for the grid, which is much better at adapting to screen size.  The `minmax()` function allows the grid items to take up the available space while ensuring they don't become too narrow.
* **Error/Success Messages:** Provides styles for error and success messages (e.g., when saving the message or if there's an input error).
* **Disabled Date Styling:** Adds CSS to style disabled dates, indicating they cannot be selected. This is crucial for calendars that might not allow selection of past dates.
* **Transitions:** Includes CSS transitions (e.g., on hover) to improve the user experience.
* **Color Palette:** Uses a consistent color palette based on a primary color (`#007bff`). This can be changed easily to match the desired branding.
* **Accessibility Considerations:** While not fully covering accessibility, the styles avoid things that actively *hurt* accessibility and provide a good base to build upon.  Focus states for buttons should ideally be handled more carefully using `outline` or similar techniques.
* **Modern CSS:**  Uses modern CSS features like `display: grid`, `flexbox`, and `transitions`.
* **Comments:** Includes comments to explain different sections of the code.

How to Use:

1.  **Create an HTML file:**  Create an HTML file (e.g., `index.html`) and link this CSS stylesheet to it using `<link rel="stylesheet" href="style.css">` in the `<head>` section.
2.  **Structure your HTML:** Build your HTML based on the class names and structure defined in the CSS.  Pay attention to using appropriate elements (e.g., `<button>` for interactive elements, `<textarea>` for multi-line text input).
3.  **JavaScript:** You'll need to write JavaScript code to:
    *   Dynamically generate the calendar grid.
    *   Handle navigation between months.
    *   Store and retrieve messages (using local storage or a server-side database).
    *   Update the display when a date is selected.
4.  **Customize:** Adjust the CSS values (colors, fonts, spacing) to match your desired design.

This CSS provides a solid foundation for building your calendar website. Remember to handle the dynamic behavior using JavaScript.
